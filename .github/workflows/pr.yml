---
name: PR

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  GO111MODULE: on

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"
          cache: true
      - name: Lint code
        run: make -s lint
      - name: Clean downloaded binaries
        run: make -s clean

  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"
          cache: true
      - name: Run fmt
        run: make -s fmt
      - name: Clean downloaded binaries
        run: make -s clean

  tests:
    strategy:
      matrix:
        name: [unit, e2e]
    runs-on: ubuntu-latest
    name: test (${{ matrix.name }})
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"
          cache: true
      - name: Run ${{ matrix.name }} tests
        run: make -s test-${{ matrix.name }}
        env:
          API_TOKEN: ${{ secrets.API_TOKEN }}

  staticcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: dominikh/staticcheck-action@v1.3.0
        with:
          version: "2022.1.3"

  codeql:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: go
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"
          cache: true
      - name: Coverage Test
        run: make -s test
        env:
          API_TOKEN: ${{ secrets.API_TOKEN }}
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
        with:
          args: >
            -Dproject.settings=build/ci/sonar-project.properties
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  builds:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: build (${{ matrix.os }})
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"
          cache: true
      - name: Build on (${{ matrix.os }})
        run: make -s build
        env:
          API_TOKEN: ${{ secrets.API_TOKEN }}
